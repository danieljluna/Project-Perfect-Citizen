#ifndef AOE_UNIT_H
#define AOE_UNIT_H

#include "Helios\helios_sprobj.h"

namespace aoe {

class Unit : public helios::SprObj {

public:

  /////////////////////////////////////////////////////////////////////
  // Constructors and Destructors:
  /////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////
    /// @brief Default Constructor. 
    /// @details Creates an object that is inactive and invisible, with
    ///     the given priority (default zero).
    ///
    /// @param priority Priority of object
    ///////////////////////////////////////////////////////////////////
    explicit Unit(const signed int _priority = 0);
    
    ///////////////////////////////////////////////////////////////////
    /// @brief Constructs the SprObj from a vector of Sprites
    /// 
    /// @param sprVec Sprite Vector
    /// @param priority Priority of object
    ///////////////////////////////////////////////////////////////////
    explicit Unit(const std::vector<helios::Animation> &sprVec,
                  const signed int _priority = 0);

    ///////////////////////////////////////////////////////////////////
    /// @brief Deleted Copy Constructor
    ///////////////////////////////////////////////////////////////////
    Unit(const Unit& other) = delete;

    ///////////////////////////////////////////////////////////////////
    /// @brief Deleted Move Constructor
    ///////////////////////////////////////////////////////////////////
    Unit(Unit&& other) = delete;
    
    ///////////////////////////////////////////////////////////////////
    /// @brief Virtual Destructor
    ///////////////////////////////////////////////////////////////////
    virtual ~Unit();


  /////////////////////////////////////////////////////////////////////
  // Operators:
  /////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////
    /// @brief Deleted Copy Assignment Operator
    ///////////////////////////////////////////////////////////////////
    Unit& operator=(const Unit& other) = delete;

    ///////////////////////////////////////////////////////////////////
    /// @brief Deleted Move Assignment Operator
    ///////////////////////////////////////////////////////////////////
    Unit& operator=(Unit&& other) = delete;


  /////////////////////////////////////////////////////////////////////
  // Step and Update Function:
  /////////////////////////////////////////////////////////////////////

    virtual void Update();


  /////////////////////////////////////////////////////////////////////
  // Public Static Members:
  /////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////
    /// @brief The default spriteVector for a Unit
    /// @details Will only be used if no sprVec is specified at 
    ///     construction time.
    ///////////////////////////////////////////////////////////////////
    static std::vector<helios::Animation> defaultAnimations;

    ///////////////////////////////////////////////////////////////////
    /// @brief Enumerates the Animations
    ///////////////////////////////////////////////////////////////////
    static enum anim_ref;

};


}   //namespace aoe

#endif //AOE_UNIT_H
