#ifndef PPC_CMPNT_INPUT
#define PPC_CMPNT_INPUT

#include "ppc_entity.h"

//TODO: Input Components should eventually handle Observers

namespace ppc {

///////////////////////////////////////////////////////////////////////
/// @brief Input Component Interface
///////////////////////////////////////////////////////////////////////
class InputComponent {
public:

  /////////////////////////////////////////////////////////////////////
  // Memory Management
  /////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////
    /// @brief Initializes an Input Component
    /// @details Resets the Component to its initial state.
    /// @post Returns the Component to its initial state so it can be
    ///     reused.
    ///////////////////////////////////////////////////////////////////
    virtual InputComponent* init() = 0;

    ///////////////////////////////////////////////////////////////////
    /// @brief Virtual Destructor
    ///////////////////////////////////////////////////////////////////
    virtual ~InputComponent() {};


  /////////////////////////////////////////////////////////////////////
  // Input Component Interface
  /////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////
    /// @brief Register Input
    /// @details This is the function called to update the Component
    ///     given the new Input State. It will be called once per Input
    ///     update step.
    ///////////////////////////////////////////////////////////////////
    virtual void update() = 0;

  /////////////////////////////////////////////////////////////////////
  // Static Members
  /////////////////////////////////////////////////////////////////////

    //TODO: This array should eventually be swapped out for an object pool.
    ///////////////////////////////////////////////////////////////////
    /// @brief Holds all Input Components so they can be iterated over.
    ///////////////////////////////////////////////////////////////////
    //static InputComponent* InputArray[2];
    //HACK: InputArray is creating weird .obj errors...I'll look into it

    ///////////////////////////////////////////////////////////////////
    /// @brief Denotes the total number of Input Components
    ///////////////////////////////////////////////////////////////////
    static size_t InputArraySize;


private:

    //Private Constructor to prevent instantiation
    InputComponent(Entity* entityPtr = nullptr);

    Entity* entity;

};


};      //End namespace ppc


#endif  //PPC_CMPNT_INPUT
